// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ThunderSDK
import AVKit
import AdSupport
import AppTrackingTransparency
import CoreBluetooth
import CoreLocation
import Foundation
import Swift
@_exported import ThunderSDK
import UIKit
import _Concurrency
public enum ThunderBuilderError : Swift.Error {
  case adTonosKeyIsInvalid
  case languageCodeIsInvalid
  case unknownError
  public static func == (a: ThunderSDK.ThunderBuilderError, b: ThunderSDK.ThunderBuilderError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ThunderSDK.ThunderBuilderError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_hasMissingDesignatedInitializers public class ATThunderSDK : ThunderSDK.Thunder {
  public static let shared: ThunderSDK.Thunder
  public func initialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  public func setNumberEightKey(_ key: Swift.String)
  public func start(with consent: ThunderSDK.AdTonosConsent)
  public var isStarted: Swift.Bool {
    get
  }
  public func loadLatestConsent() -> ThunderSDK.AdTonosConsent?
  public func save(consent: ThunderSDK.AdTonosConsent)
  public func createBuilder() -> ThunderSDK.ThunderVastURLBuilder
  public func dispose()
  public func add(thunderObserver: ThunderSDK.ThunderObserver)
  public func remove(thunderObserver: ThunderSDK.ThunderObserver)
  public func removeAllObservers()
  @objc deinit
}
public protocol ThunderObserver : AnyObject {
  func onStarted(success: Swift.Bool, error: ThunderSDK.ThunderError?)
}
@objc public enum AdTonosConsent : Swift.Int {
  case allowAll
  case none
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public protocol BaseThunder {
  func initialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  func setNumberEightKey(_ key: Swift.String)
  func start(with consent: ThunderSDK.AdTonosConsent)
  var isStarted: Swift.Bool { get }
  func loadLatestConsent() -> ThunderSDK.AdTonosConsent?
  func save(consent: ThunderSDK.AdTonosConsent)
  func createBuilder() -> ThunderSDK.ThunderVastURLBuilder
  func dispose()
}
public enum VastAdType : Swift.String {
  case regular
  case bannerAd
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol ThunderVastURLBuilder {
  func set(lang: Swift.String?) -> Self
  func set(adTonosKey: Swift.String) -> Self
  func set(adType: ThunderSDK.VastAdType) -> Self
  func build() throws -> Swift.String
}
public protocol ThunderObservable {
  func add(thunderObserver: ThunderSDK.ThunderObserver)
  func remove(thunderObserver: ThunderSDK.ThunderObserver)
  func removeAllObservers()
}
public protocol Thunder : ThunderSDK.BaseThunder, ThunderSDK.ThunderObservable {
}
public enum ThunderError {
  case alreadyInitialized
  public static func == (a: ThunderSDK.ThunderError, b: ThunderSDK.ThunderError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc public class ObjC_ThunderSDK : ObjectiveC.NSObject {
  @objc public static let shared: ThunderSDK.ObjC_ThunderSDK
  @objc public func initialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  @objc public func setNumberEightKey(_ key: Swift.String)
  @objc public func start(with consent: Swift.Int32)
  @objc public var isStarted: Swift.Bool {
    @objc get
  }
  @objc public func save(consent: Swift.Int32)
  @objc public func loadLatestConsent() -> Swift.Int32
  @objc public func createBuilder() -> Swift.Int32
  @objc public func set(language: Swift.String?, for builderId: Swift.Int32)
  @objc public func set(adType: Swift.Int32, for builderId: Swift.Int32)
  @objc public func set(key: Swift.String?, for builderId: Swift.Int32)
  @objc public func createURL(with builderId: Swift.Int32) -> Swift.String
  @objc public func dispose()
  @objc deinit
}
extension ThunderSDK.ThunderBuilderError : Swift.Equatable {}
extension ThunderSDK.ThunderBuilderError : Swift.Hashable {}
extension ThunderSDK.AdTonosConsent : Swift.Equatable {}
extension ThunderSDK.AdTonosConsent : Swift.Hashable {}
extension ThunderSDK.AdTonosConsent : Swift.RawRepresentable {}
extension ThunderSDK.VastAdType : Swift.Equatable {}
extension ThunderSDK.VastAdType : Swift.Hashable {}
extension ThunderSDK.VastAdType : Swift.RawRepresentable {}
extension ThunderSDK.ThunderError : Swift.Equatable {}
extension ThunderSDK.ThunderError : Swift.Hashable {}
