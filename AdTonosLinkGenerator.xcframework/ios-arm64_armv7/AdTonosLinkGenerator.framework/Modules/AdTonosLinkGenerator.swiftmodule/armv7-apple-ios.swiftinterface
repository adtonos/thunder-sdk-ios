// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AdTonosLinkGenerator
import AVKit
import AdSupport
@_exported import AdTonosLinkGenerator
import AppTrackingTransparency
import Audiences
import CoreBluetooth
import CoreLocation
import Foundation
import NumberEight
import Swift
import UIKit
import _Concurrency
public enum AdTonosBuilderError : Swift.Error {
  case adTonosKeyIsInvalid
  case adTonosLanguageCodeIsInvalid
  case unknownError
  public static func == (a: AdTonosLinkGenerator.AdTonosBuilderError, b: AdTonosLinkGenerator.AdTonosBuilderError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension AdTonosLinkGenerator.AdTonosBuilderError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_hasMissingDesignatedInitializers public class AdTonosSDK : AdTonosLinkGenerator.AdTonos {
  public static let shared: AdTonosLinkGenerator.AdTonos
  public func intialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  public func start(with consent: AdTonosLinkGenerator.AdTonosConsent)
  public var isStarted: Swift.Bool {
    get
  }
  public func loadLatestConsent() -> AdTonosLinkGenerator.AdTonosConsent?
  public func save(consent: AdTonosLinkGenerator.AdTonosConsent)
  public func createBuilder() -> AdTonosLinkGenerator.AdTonosVastURLBuilder
  public func dispose()
  @objc deinit
}
@objc public enum AdTonosConsent : Swift.Int {
  case allowAll
  case none
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public protocol AdTonosVastURLBuilder {
  func set(lang: Swift.String?) -> Self
  func set(adTonosKey: Swift.String) -> Self
  func build() throws -> Swift.String
}
public protocol AdTonos {
  func intialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  func start(with consent: AdTonosLinkGenerator.AdTonosConsent)
  var isStarted: Swift.Bool { get }
  func loadLatestConsent() -> AdTonosLinkGenerator.AdTonosConsent?
  func save(consent: AdTonosLinkGenerator.AdTonosConsent)
  func createBuilder() -> AdTonosLinkGenerator.AdTonosVastURLBuilder
  func dispose()
}
@_hasMissingDesignatedInitializers @objc public class ObjC_AdTonosSDK : ObjectiveC.NSObject {
  @objc public static let shared: AdTonosLinkGenerator.ObjC_AdTonosSDK
  @objc public func intialize(with launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  @objc public func start(with consent: Swift.Int32)
  @objc public var isStarted: Swift.Bool {
    @objc get
  }
  @objc public func save(consent: Swift.Int32)
  @objc public func loadLatestConsent() -> Swift.Int32
  @objc public func createBuilder() -> Swift.Int32
  @objc public func set(language: Swift.String?, for builderId: Swift.Int32)
  @objc public func set(key: Swift.String?, for builderId: Swift.Int32)
  @objc public func createURL(with builderId: Swift.Int32) -> Swift.String
  @objc public func dispose()
  @objc deinit
}
extension AdTonosLinkGenerator.AdTonosBuilderError : Swift.Equatable {}
extension AdTonosLinkGenerator.AdTonosBuilderError : Swift.Hashable {}
extension AdTonosLinkGenerator.AdTonosConsent : Swift.Equatable {}
extension AdTonosLinkGenerator.AdTonosConsent : Swift.Hashable {}
extension AdTonosLinkGenerator.AdTonosConsent : Swift.RawRepresentable {}
